apply plugin: 'com.android.application'



android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.yinglankeji.sillychild"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 38
        versionName "1.0.201803150845"
        multiDexEnabled true
        dataBinding {
            enabled = true
        }
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64", 'mips', 'mips64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "ec4e2d34a58af3ac6bc25818", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
                UMENG_APPKEY : "598c1715a325111796001dfc",//友盟分享上注册的包名对应的appkey.
                GAODE_APPKEY : "7e863564eb0ceb3db0a075b9a04ef7d3",//高德定位上注册的包名对应的appkey.
        ]
    }
    //签名配置signingConfigs一定要在buildTypes前
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file('ruitu.keystore')
            storePassword "111111"
            keyAlias "ruitukeji"
            keyPassword "111111"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        javaMaxHeapSize "2048M"
        preDexLibraries = false
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        //lint 遇到 error 时继续 构建
        abortOnError false
        //build release 版本 时 开启lint 检测
        checkReleaseBuilds false
        ignoreWarnings true
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'deprecation' //忽略错误
        disable "InvalidPackage"
        // lintConfig file("lint.xml")
        disable 'MissingTranslation', 'ExtraTranslation'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'LICENSE'
        exclude 'NOTICE'
    }

    //签名配置signingConfigs一定要在buildTypes前
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file('ruitu.keystore')
            storePassword "111111"
            keyAlias "ruitukeji"
            keyPassword "111111"
        }
    }

    //打包配置
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            zipAlignEnabled true
            shrinkResources false
            // 是否进行混淆
            minifyEnabled false
            // 混淆文件的位置
            signingConfig signingConfigs.debug
            buildConfigField "String", "GAODE_APPKEY", "\"7e863564eb0ceb3db0a075b9a04ef7d3\""
            buildConfigField "String", "GAODE_WEBKEY", "\"3a74da0c1de0f653254f82f4c0182877\""
            //    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles 'proguard-rules.pro'
        }
        release {
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            shrinkResources true
            // 是否进行混淆
            minifyEnabled true
            // 混淆文件的位置
            signingConfig signingConfigs.release
            buildConfigField "String", "GAODE_APPKEY", "\"7e863564eb0ceb3db0a075b9a04ef7d3\""
            buildConfigField "String", "GAODE_WEBKEY", "\"3a74da0c1de0f653254f82f4c0182877\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // proguardFiles 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':Cklibrary')
}
